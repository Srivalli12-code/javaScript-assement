Here are **programming assessment questions** focused on **loops (for/while)**. These questions are designed to test the candidate's understanding of loop structures and how they can be applied in different scenarios.

---

### 1. **Basic Questions**

#### 1.1 **Print Numbers from 1 to N (Using a `for` loop)**
Write a program that prints the numbers from **1 to N** (inclusive), where **N** is an integer provided by the user.

#### 1.2 **Sum of First N Natural Numbers**
Write a program that calculates the **sum of the first N natural numbers**. Use a `for` loop to find the sum.

#### 1.3 **Factorial of a Number**
Write a program to calculate the **factorial** of a number provided by the user using a `for` loop. For example, the factorial of 5 is \( 5 \times 4 \times 3 \times 2 \times 1 = 120 \).

#### 1.4 **Print Odd Numbers Between 1 and N**
Write a program that prints all **odd numbers between 1 and N** using a `for` loop.

#### 1.5 **Print Multiplication Table (Using a `for` loop)**
Write a program that prints the **multiplication table** of a given number **X** up to **10**. For example, for X = 3, the output should be:
```
3 * 1 = 3
3 * 2 = 6
...
3 * 10 = 30
```

---

### 2. **Intermediate Questions**

#### 2.1 **Sum of Even Numbers from 1 to N**
Write a program to find the **sum of all even numbers** between 1 and N. Use a `for` loop to calculate this sum.

#### 2.2 **Count the Number of Digits in a Number**
Write a program that takes a positive integer as input and prints how many **digits** the number has. Use a `while` loop.

#### 2.3 **Find the Largest Number in a List**
Write a program that takes a list of **numbers** and prints the **largest number** in the list using a `for` loop.

#### 2.4 **Sum of Digits of a Number**
Write a program to calculate the **sum of digits** of a given number using a `while` loop. For example:
- Input: 1234
- Output: 1 + 2 + 3 + 4 = 10

#### 2.5 **Print Fibonacci Sequence (Using a `for` loop)**
Write a program that prints the first **N Fibonacci numbers**. The Fibonacci sequence starts with 0, 1, and each subsequent number is the sum of the previous two numbers.

---

### 3. **Advanced Questions**

#### 3.1 **Prime Number Check**
Write a program that checks if a given number is a **prime number** using a `for` loop. A prime number is only divisible by 1 and itself.

#### 3.2 **Print Patterns with Loops (Right-Angle Triangle)**
Write a program that prints a **right-angle triangle pattern** with asterisks (`*`). For example, for N = 5, the output should look like:
```
*
**
***
****
*****
```

#### 3.3 **Reverse a Number**
Write a program that reverses a number using a `while` loop. For example:
- Input: 1234
- Output: 4321

#### 3.4 **Check for Palindrome Number**
Write a program that checks if a given number is a **palindrome** using a `while` loop. A palindrome number is the same forward and backward (e.g., 121, 12321).

#### 3.5 **Find the Sum of Prime Numbers Up to N**
Write a program that calculates the **sum of all prime numbers** up to N using a `for` loop. A prime number is a number greater than 1 that is divisible only by 1 and itself.

#### 3.6 **Print Diamond Pattern**
Write a program that prints a **diamond pattern** using asterisks (`*`). For example, for N = 5, the output should look like:
```
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *
```

---

### 4. **Logic and Edge Case Questions**

#### 4.1 **Find the GCD of Two Numbers**
Write a program that calculates the **Greatest Common Divisor (GCD)** of two numbers using a `while` loop.

#### 4.2 **Find the LCM of Two Numbers**
Write a program that calculates the **Least Common Multiple (LCM)** of two numbers using a `for` loop.

#### 4.3 **Count Vowels in a String**
Write a program that counts the number of **vowels** (a, e, i, o, u) in a given string using a `for` loop.

#### 4.4 **Print All Divisors of a Number**
Write a program that prints all the **divisors** of a given number using a `for` loop. For example, for the number 12, the divisors are: 1, 2, 3, 4, 6, 12.

#### 4.5 **Count the Occurrences of a Character in a String**
Write a program that counts how many times a specific **character** appears in a given string using a `for` loop.

---

### 5. **Real-Life Scenario Based Questions**

#### 5.1 **Salary Increment**
Write a program that calculates the **new salary** after an increment. The program should take the current salary and the increment percentage (entered by the user). If the salary is less than $5000, the increment is 10%. If the salary is between $5000 and $10000, the increment is 7%. If the salary is above $10000, the increment is 5%.

#### 5.2 **Bank Account Balance Growth**
Write a program that simulates the growth of a **bank account balance** over time. The program should take the initial balance, annual interest rate, and the number of years as input. Use a `while` loop to calculate the balance after each year.

#### 5.3 **Cumulative Product of a Series**
Write a program that calculates the **cumulative product** of a series of numbers entered by the user, using a `for` loop. For example:
- Input: 2, 3, 4
- Output: 2 * 3 * 4 = 24

#### 5.4 **Check for Armstrong Number**
Write a program to check if a number is an **Armstrong number**. An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits. For example, 153 is an Armstrong number because \( 1^3 + 5^3 + 3^3 = 153 \).

---

These loop-related questions are designed to assess a candidate's ability to use loops effectively for solving various problems. You can modify the difficulty based on the skill level you're targeting (e.g., more complex patterns or additional edge cases for advanced assessments). Let me know if you need solutions to any of these questions!